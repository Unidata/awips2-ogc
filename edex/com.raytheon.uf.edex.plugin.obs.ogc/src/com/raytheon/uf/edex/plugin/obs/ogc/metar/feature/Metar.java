//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.11.29 at 09:28:54 AM CST 
//

package com.raytheon.uf.edex.plugin.obs.ogc.metar.feature;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Set;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;

import net.opengis.gml.v_3_1_1.AbstractFeatureType;

import com.raytheon.uf.common.dataplugin.obs.metar.MetarRecord;
import com.raytheon.uf.common.dataplugin.obs.metar.util.SkyCover;
import com.raytheon.uf.common.dataplugin.obs.metar.util.WeatherCondition;
import com.raytheon.uf.common.pointdata.spatial.SurfaceObsLocation;
import com.raytheon.uf.common.status.IUFStatusHandler;
import com.raytheon.uf.common.status.UFStatus;
import com.raytheon.uf.edex.ogc.common.feature.ObsLocation;

/**
 * <p>
 * Java class for metar complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="metar">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/gml}AbstractFeatureType">
 *       &lt;sequence>
 *         &lt;element name="report" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="nominalTime" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="timeObs" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="reportType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="correction" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="obsLocation" type="{http://metar.edex.uf.raytheon.com}obsLocation" minOccurs="0"/>
 *         &lt;element name="autoStationType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="skyKey" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="skyCoverage" type="{http://metar.edex.uf.raytheon.com}skyCover" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="vertVisibility" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="skyLayerBase" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="visibility" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="weatherKey" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="weatherCondition" type="{http://metar.edex.uf.raytheon.com}weatherCondition" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="seaLevelPress" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="temperature" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="tempFromTenths" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="dewPoint" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="dewPointFromTenths" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="windDir" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="windSpeed" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="windGust" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="altimeterInPa" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="altimeter" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="minTemp24Hour" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="maxTemp24Hour" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="precip1Hour" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="precip3Hour" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="precip6Hour" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="precip24Hour" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="pressChangeChar" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="pressChange3Hour" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/>
 *         &lt;element name="refHour" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "metar", propOrder = { "report", "nominalTime", "timeObs",
        "reportType", "correction", "obsLocation", "autoStationType", "skyKey",
        "skyCoverage", "vertVisibility", "skyLayerBase", "visibility",
        "weatherKey", "weatherCondition", "seaLevelPress", "temperature",
        "tempFromTenths", "dewPoint", "dewPointFromTenths", "windDir",
        "windSpeed", "windGust", "altimeterInPa", "altimeter", "minTemp24Hour",
        "maxTemp24Hour", "precip1Hour", "precip3Hour", "precip6Hour",
        "precip24Hour", "pressChangeChar", "pressChange3Hour", "refHour" })
public class Metar extends AbstractFeatureType {

    protected String report;

    protected String nominalTime;

    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar timeObs;

    protected String reportType;

    protected String correction;

    protected ObsLocation obsLocation;

    protected String autoStationType;

    protected String skyKey;

    protected List<com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.SkyCover> skyCoverage;

    protected Integer vertVisibility;

    protected Integer skyLayerBase;

    protected Float visibility;

    protected String weatherKey;

    protected List<com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.WeatherCondition> weatherCondition;

    protected Float seaLevelPress;

    protected Integer temperature;

    protected Float tempFromTenths;

    protected Integer dewPoint;

    protected Float dewPointFromTenths;

    protected String windDir;

    protected Integer windSpeed;

    protected Integer windGust;

    protected Float altimeterInPa;

    protected Float altimeter;

    protected Float minTemp24Hour;

    protected Float maxTemp24Hour;

    protected Float precip1Hour;

    protected Float precip3Hour;

    protected Float precip6Hour;

    protected Float precip24Hour;

    protected String pressChangeChar;

    protected Float pressChange3Hour;

    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar refHour;

    private static final int intNullVal = -9999;

    private static final float floatNullVal = -9999;

    private static final transient IUFStatusHandler statusHandler = UFStatus
            .getHandler(Metar.class);

    // public non-creative constructor
    public Metar() {

    }

    /**
     * copy constructor
     * 
     * @param record
     */
    public Metar(MetarRecord record) {

        this.setReport(record.getReport());
        this.setNominalTime(record.getNominalTime());
        this.setTimeObs(getCalendar(record.getTimeObs()));
        this.setReportType(record.getReportType());
        this.setCorrection(record.getCorrection());
        this.setObsLocation(getObsLocation(record.getLocation()));
        this.setAutoStationType(record.getAutoStationType());
        this.setSkyKey(record.getSkyKey());
        this.setSkyCover(record.getSkyCoverage());
        this.setVertVisibility(getInt(record.getVertVisibility(), intNullVal));
        this.setSkyLayerBase(getInt(record.getSkyLayerBase(), intNullVal));
        this.setVisibility(getFloat(record.getVisibility(), floatNullVal));
        this.setWeatherKey(record.getWeatherKey());
        this.setWeatherCondition(record.getWeatherCondition());
        this.setSeaLevelPress(getFloat(record.getSeaLevelPress(), floatNullVal));
        this.setTemperature(getInt(record.getTemperature(), intNullVal));
        this.setTempFromTenths(getFloat(record.getTempFromTenths(),
                floatNullVal));
        this.setDewPoint(getInt(record.getDewPoint(), intNullVal));
        this.setDewPointFromTenths(getFloat(record.getDewPointFromTenths(),
                floatNullVal));
        this.setWindDir(record.getWindDir());
        this.setWindSpeed(getInt(record.getWindSpeed(), intNullVal));
        this.setWindGust(getInt(record.getWindGust(), intNullVal));
        this.setAltimeterInPa(getFloat(record.getAltimeterInPa(), floatNullVal));
        this.setAltimeter(getFloat(record.getAltimeter(), floatNullVal));
        this.setMinTemp24Hour(getFloat(record.getMinTemp24Hour(), floatNullVal));
        this.setMaxTemp24Hour(getFloat(record.getMaxTemp24Hour(), floatNullVal));
        this.setPrecip1Hour(getFloat(record.getPrecip1Hour(), floatNullVal));
        this.setPrecip3Hour(getFloat(record.getPrecip3Hour(), floatNullVal));
        this.setPrecip6Hour(getFloat(record.getPrecip6Hour(), floatNullVal));
        this.setPrecip24Hour(getFloat(record.getPrecip24Hour(), floatNullVal));
        this.setPressChangeChar(record.getPressChangeChar());
        this.setPressChange3Hour(getFloat(record.getPressChange3Hour(),
                floatNullVal));
        this.setRefHour(getCalendar(record.getRefHour()));
    }

    /**
     * Gets the value of the report property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getReport() {
        return report;
    }

    /**
     * Sets the value of the report property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setReport(String value) {
        this.report = value;
    }

    /**
     * Gets the value of the nominalTime property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getNominalTime() {
        return nominalTime;
    }

    /**
     * Sets the value of the nominalTime property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setNominalTime(String value) {
        this.nominalTime = value;
    }

    /**
     * Gets the value of the timeObs property.
     * 
     * @return possible object is {@link XMLGregorianCalendar }
     * 
     */
    public XMLGregorianCalendar getTimeObs() {
        return timeObs;
    }

    /**
     * Sets the value of the timeObs property.
     * 
     * @param value
     *            allowed object is {@link XMLGregorianCalendar }
     * 
     */
    public void setTimeObs(XMLGregorianCalendar value) {
        this.timeObs = value;
    }

    /**
     * Gets the value of the reportType property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getReportType() {
        return reportType;
    }

    /**
     * Sets the value of the reportType property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setReportType(String value) {
        this.reportType = value;
    }

    /**
     * Gets the value of the correction property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getCorrection() {
        return correction;
    }

    /**
     * Sets the value of the correction property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setCorrection(String value) {
        this.correction = value;
    }

    /**
     * Gets the value of the obsLocation property.
     * 
     * @return possible object is {@link ObsLocation }
     * 
     */
    public ObsLocation getObsLocation() {
        return obsLocation;
    }

    /**
     * Sets the value of the obsLocation property.
     * 
     * @param value
     *            allowed object is {@link ObsLocation }
     * 
     */
    public void setObsLocation(ObsLocation value) {
        this.obsLocation = value;
    }

    /**
     * Gets the value of the autoStationType property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getAutoStationType() {
        return autoStationType;
    }

    /**
     * Sets the value of the autoStationType property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setAutoStationType(String value) {
        this.autoStationType = value;
    }

    /**
     * Gets the value of the skyKey property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getSkyKey() {
        return skyKey;
    }

    /**
     * Sets the value of the skyKey property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setSkyKey(String value) {
        this.skyKey = value;
    }

    /**
     * Gets the value of the skyCoverage property.
     * 
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the skyCoverage property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getSkyCoverage().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list {@link SkyCover }
     * 
     * 
     */
    public List<com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.SkyCover> getSkyCoverage() {
        if (skyCoverage == null) {
            skyCoverage = new ArrayList<com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.SkyCover>();
        }
        return this.skyCoverage;
    }

    /**
     * Gets the value of the vertVisibility property.
     * 
     * @return possible object is {@link Integer }
     * 
     */
    public Integer getVertVisibility() {
        return vertVisibility;
    }

    /**
     * Sets the value of the vertVisibility property.
     * 
     * @param value
     *            allowed object is {@link Integer }
     * 
     */
    public void setVertVisibility(Integer value) {
        this.vertVisibility = value;
    }

    /**
     * Gets the value of the skyLayerBase property.
     * 
     * @return possible object is {@link Integer }
     * 
     */
    public Integer getSkyLayerBase() {
        return skyLayerBase;
    }

    /**
     * Sets the value of the skyLayerBase property.
     * 
     * @param value
     *            allowed object is {@link Integer }
     * 
     */
    public void setSkyLayerBase(Integer value) {
        this.skyLayerBase = value;
    }

    /**
     * Gets the value of the visibility property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getVisibility() {
        return visibility;
    }

    /**
     * Sets the value of the visibility property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setVisibility(Float value) {
        this.visibility = value;
    }

    /**
     * Gets the value of the weatherKey property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getWeatherKey() {
        return weatherKey;
    }

    /**
     * Sets the value of the weatherKey property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setWeatherKey(String value) {
        this.weatherKey = value;
    }

    /**
     * Gets the value of the weatherCondition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the weatherCondition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getWeatherCondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WeatherCondition }
     * 
     * 
     */
    public List<com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.WeatherCondition> getWeatherCondition() {
        if (weatherCondition == null) {
            weatherCondition = new ArrayList<com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.WeatherCondition>();
        }
        return this.weatherCondition;
    }

    /**
     * Gets the value of the seaLevelPress property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getSeaLevelPress() {
        return seaLevelPress;
    }

    /**
     * Sets the value of the seaLevelPress property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setSeaLevelPress(Float value) {
        this.seaLevelPress = value;
    }

    /**
     * Gets the value of the temperature property.
     * 
     * @return possible object is {@link Integer }
     * 
     */
    public Integer getTemperature() {
        return temperature;
    }

    /**
     * Sets the value of the temperature property.
     * 
     * @param value
     *            allowed object is {@link Integer }
     * 
     */
    public void setTemperature(Integer value) {
        this.temperature = value;
    }

    /**
     * Gets the value of the tempFromTenths property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getTempFromTenths() {
        return tempFromTenths;
    }

    /**
     * Sets the value of the tempFromTenths property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setTempFromTenths(Float value) {
        this.tempFromTenths = value;
    }

    /**
     * Gets the value of the dewPoint property.
     * 
     * @return possible object is {@link Integer }
     * 
     */
    public Integer getDewPoint() {
        return dewPoint;
    }

    /**
     * Sets the value of the dewPoint property.
     * 
     * @param value
     *            allowed object is {@link Integer }
     * 
     */
    public void setDewPoint(Integer value) {
        this.dewPoint = value;
    }

    /**
     * Gets the value of the dewPointFromTenths property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getDewPointFromTenths() {
        return dewPointFromTenths;
    }

    /**
     * Sets the value of the dewPointFromTenths property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setDewPointFromTenths(Float value) {
        this.dewPointFromTenths = value;
    }

    /**
     * Gets the value of the windDir property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getWindDir() {
        return windDir;
    }

    /**
     * Sets the value of the windDir property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setWindDir(String value) {
        this.windDir = value;
    }

    /**
     * Gets the value of the windSpeed property.
     * 
     * @return possible object is {@link Integer }
     * 
     */
    public Integer getWindSpeed() {
        return windSpeed;
    }

    /**
     * Sets the value of the windSpeed property.
     * 
     * @param value
     *            allowed object is {@link Integer }
     * 
     */
    public void setWindSpeed(Integer value) {
        this.windSpeed = value;
    }

    /**
     * Gets the value of the windGust property.
     * 
     * @return possible object is {@link Integer }
     * 
     */
    public Integer getWindGust() {
        return windGust;
    }

    /**
     * Sets the value of the windGust property.
     * 
     * @param value
     *            allowed object is {@link Integer }
     * 
     */
    public void setWindGust(Integer value) {
        this.windGust = value;
    }

    /**
     * Gets the value of the altimeterInPa property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getAltimeterInPa() {
        return altimeterInPa;
    }

    /**
     * Sets the value of the altimeterInPa property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setAltimeterInPa(Float value) {
        this.altimeterInPa = value;
    }

    /**
     * Gets the value of the altimeter property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getAltimeter() {
        return altimeter;
    }

    /**
     * Sets the value of the altimeter property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setAltimeter(Float value) {
        this.altimeter = value;
    }

    /**
     * Gets the value of the minTemp24Hour property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getMinTemp24Hour() {
        return minTemp24Hour;
    }

    /**
     * Sets the value of the minTemp24Hour property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setMinTemp24Hour(Float value) {
        this.minTemp24Hour = value;
    }

    /**
     * Gets the value of the maxTemp24Hour property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getMaxTemp24Hour() {
        return maxTemp24Hour;
    }

    /**
     * Sets the value of the maxTemp24Hour property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setMaxTemp24Hour(Float value) {
        this.maxTemp24Hour = value;
    }

    /**
     * Gets the value of the precip1Hour property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getPrecip1Hour() {
        return precip1Hour;
    }

    /**
     * Sets the value of the precip1Hour property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setPrecip1Hour(Float value) {
        this.precip1Hour = value;
    }

    /**
     * Gets the value of the precip3Hour property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getPrecip3Hour() {
        return precip3Hour;
    }

    /**
     * Sets the value of the precip3Hour property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setPrecip3Hour(Float value) {
        this.precip3Hour = value;
    }

    /**
     * Gets the value of the precip6Hour property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getPrecip6Hour() {
        return precip6Hour;
    }

    /**
     * Sets the value of the precip6Hour property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setPrecip6Hour(Float value) {
        this.precip6Hour = value;
    }

    /**
     * Gets the value of the precip24Hour property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getPrecip24Hour() {
        return precip24Hour;
    }

    /**
     * Sets the value of the precip24Hour property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setPrecip24Hour(Float value) {
        this.precip24Hour = value;
    }

    /**
     * Gets the value of the pressChangeChar property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getPressChangeChar() {
        return pressChangeChar;
    }

    /**
     * Sets the value of the pressChangeChar property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setPressChangeChar(String value) {
        this.pressChangeChar = value;
    }

    /**
     * Gets the value of the pressChange3Hour property.
     * 
     * @return possible object is {@link Float }
     * 
     */
    public Float getPressChange3Hour() {
        return pressChange3Hour;
    }

    /**
     * Sets the value of the pressChange3Hour property.
     * 
     * @param value
     *            allowed object is {@link Float }
     * 
     */
    public void setPressChange3Hour(Float value) {
        this.pressChange3Hour = value;
    }

    /**
     * Gets the value of the refHour property.
     * 
     * @return possible object is {@link XMLGregorianCalendar }
     * 
     */
    public XMLGregorianCalendar getRefHour() {
        return refHour;
    }

    /**
     * Sets the value of the refHour property.
     * 
     * @param value
     *            allowed object is {@link XMLGregorianCalendar }
     * 
     */
    public void setRefHour(XMLGregorianCalendar value) {
        this.refHour = value;
    }

    /*
     * (non-Javadoc)
     * 
     * @see org.jvnet.jaxb2_commons.lang.CopyTo#createNewInstance()
     */
    @Override
    public Metar createNewInstance() {
        return new Metar();
    }

    /**
     * @param weatherCondition
     * @return
     */
    private com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.WeatherCondition getWeatherConditionInternal(
            WeatherCondition from) {
        if (from == null) {
            return null;
        }
        com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.WeatherCondition to = new com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.WeatherCondition(
                from);
        return to;
    }

    /**
     * @param skyCoverage
     * @return
     */
    private com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.SkyCover getSkyCoverInternal(
            SkyCover from) {
        if (from == null) {
            return null;
        }
        com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.SkyCover to = new com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.SkyCover(
                from);
        return to;
    }

    /**
     * @param obsLocation
     * @return
     */
    private ObsLocation getObsLocation(SurfaceObsLocation from) {
        if (from == null) {
            return null;
        }
        ObsLocation to = new ObsLocation(from);
        return to;
    }

    protected XMLGregorianCalendar getCalendar(Calendar cal) {
        if (cal == null) {
            return null;
        }
        GregorianCalendar gcal = new GregorianCalendar(cal.getTimeZone());
        gcal.setTimeInMillis(cal.getTimeInMillis());
        try {
            return DatatypeFactory.newInstance().newXMLGregorianCalendar(gcal);
        } catch (DatatypeConfigurationException e) {
            statusHandler
                    .error("Unable to convert calendar. " + e.getMessage());
            return null;
        }
    }

    private Integer getInt(int i, int nullVal) {
        if (i == nullVal) {
            return null;
        }
        return i;
    }

    private Float getFloat(float f, float nullVal) {
        if (f == nullVal) {
            return null;
        }
        return f;
    }

    /**
     * @param skyCoverage
     */
    private void setSkyCover(
            Set<com.raytheon.uf.common.dataplugin.obs.metar.util.SkyCover> from) {
        if (from != null) {
            List<com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.SkyCover> localSkyCover = getSkyCoverage();
            for (com.raytheon.uf.common.dataplugin.obs.metar.util.SkyCover sc : from) {
                localSkyCover.add(getSkyCoverInternal(sc));
            }
        }
    }

    /**
     * @param weatherCondition
     */
    private void setWeatherCondition(
            List<com.raytheon.uf.common.dataplugin.obs.metar.util.WeatherCondition> from) {
        if (from != null) {
            List<com.raytheon.uf.edex.plugin.obs.ogc.metar.feature.WeatherCondition> localWeatherCondition = getWeatherCondition();
            for (com.raytheon.uf.common.dataplugin.obs.metar.util.WeatherCondition wc : from) {
                localWeatherCondition.add(getWeatherConditionInternal(wc));
            }
        }
    }

}
